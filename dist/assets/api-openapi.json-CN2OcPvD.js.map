{"version":3,"file":"api-openapi.json-CN2OcPvD.js","sources":["../../node_modules/.zudoku/processed/api-openapi.json.js?d=1759494600144"],"sourcesContent":["const __refs = Array.from({ length: 0 }, () => ({}));\nconst __refMap = {\n\n};\nconst __refMapPaths = Object.keys(__refMap);\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"AML API documentation\",\n    \"version\": \"1.0.19\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://dev1.immosurance.net/yiiapp/backend/web\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Import\",\n      \"description\": \"CSV/XLS import\"\n    },\n    {\n      \"name\": \"Lookups\",\n      \"description\": \"All Lookups are paginated (page size is 200)\"\n    }\n  ],\n  \"paths\": {\n    \"/import/import-data\": {\n      \"post\": {\n        \"tags\": [\n          \"Import\"\n        ],\n        \"summary\": \"Import Data (CSV/XLS)\",\n        \"description\": \"API to import data of specific model.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"modelName\": {\n                    \"type\": \"string\",\n                    \"description\": \"Name of model whose data is going to be imported.<br>\\nAccepted values: `'property', 'client', 'dossier'`\\n\"\n                  },\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"description\": \"Accepted formats: `'csv', 'xls', 'xlsx'`.<br>\\n_Make sure file contains header and at least one row._\\n\"\n                  }\n                },\n                \"required\": [\n                  \"modelName\",\n                  \"file\"\n                ]\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful import request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"estimated_time\": {\n                      \"type\": \"string\",\n                      \"description\": \"Estimated time to complete import\"\n                    },\n                    \"importId\": {\n                      \"type\": \"string\",\n                      \"description\": \"Unique ID to get import status\"\n                    }\n                  },\n                  \"required\": [\n                    \"time\",\n                    \"importId\"\n                  ]\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"estimated_time\": \"1.00 minute/s.\",\n                      \"importId\": \"68db7b72644ddf7b483d16b0\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable entity\"\n          },\n          \"500\": {\n            \"description\": \"Internal server error\"\n          }\n        }\n      }\n    },\n    \"/import/import-status\": {\n      \"get\": {\n        \"tags\": [\n          \"Import\"\n        ],\n        \"summary\": \"Check Import Status\",\n        \"description\": \"Check the progress and current state of an import by its ID.\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"importId\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"The ID of the import job\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful import operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if the import request was successful\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"model\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"commercial\",\n                            \"client\",\n                            \"dossier\"\n                          ]\n                        },\n                        \"import_method\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"file\",\n                            \"copy-paste\"\n                          ]\n                        },\n                        \"file_name\": {\n                          \"type\": \"string\",\n                          \"description\": \"Name of file if import method is file\"\n                        },\n                        \"total\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Number of total records\"\n                        },\n                        \"imported\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Number of successfully imported records\"\n                        },\n                        \"failed\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Number of failed records\"\n                        },\n                        \"skipped\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Number of skipped records\"\n                        },\n                        \"invalid\": {\n                          \"type\": \"integer\",\n                          \"description\": \"Number of invalid mappings in a record\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"description\": \"Status of import\",\n                          \"enum\": [\n                            \"pending\",\n                            \"in-process\",\n                            \"completed\",\n                            \"failed\"\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"model\",\n                        \"import_method\",\n                        \"file_name\",\n                        \"total\",\n                        \"imported\",\n                        \"failed\",\n                        \"skipped\",\n                        \"invalid\",\n                        \"status\"\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"success\",\n                    \"data\"\n                  ]\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"data\": {\n                        \"model\": \"dossier\",\n                        \"import_method\": \"file\",\n                        \"file_name\": \"dossier_api_test_1.csv\",\n                        \"total\": 1,\n                        \"imported\": 0,\n                        \"failed\": 0,\n                        \"skipped\": 0,\n                        \"invalid\": 0,\n                        \"status\": \"pending\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Import log not found\"\n          }\n        }\n      }\n    },\n    \"/import/download-import-log\": {\n      \"get\": {\n        \"tags\": [\n          \"Import\"\n        ],\n        \"summary\": \"Download Import Logs (Errors/Warnings)\",\n        \"description\": \"Downloads a file containing warnings and errors encountered during the import process.\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"importId\",\n            \"in\": \"query\",\n            \"description\": \"The ID of the import job\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation - returns a CSV file\",\n            \"content\": {\n              \"!text/csv\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"contentMediaType\": \"application/octet-stream\"\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"summary\": \"Example CSV\",\n                    \"value\": \"row,status,'source field','AML field',message,time\\n1,Invalid,commission_player,payer,'API tried to set unknown field `commission_player`',2025-09-30T06:40:50+00:00\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing/invalid import ID\"\n          },\n          \"404\": {\n            \"description\": \"Import log/file not found\"\n          }\n        }\n      }\n    },\n    \"/import/get-property-types\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available property types\",\n        \"description\": \"Get list of available property types to be used in import file<br/> If `parent_key` is null, then it's a main property type (`type_one`) <br/>If `parent_key` has a value, then it's a secondary property type (`type_two`) of the main type identified by `parent_key`\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"description\": \"Page number to return (pagination is 200) - Default : 1\"\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key to be searched with\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if the request was successful\"\n                    },\n                    \"page\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Current page number\"\n                    },\n                    \"pageSize\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Number of records per page\"\n                    },\n                    \"totalRecords\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of records available\"\n                    },\n                    \"totalPages\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of pages available\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the property type\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of the property type\"\n                          },\n                          \"parent_key\": {\n                            \"type\": [\n                              \"number\",\n                              \"null\"\n                            ],\n                            \"description\": \"system generated key of the parent property type (if applicable)\"\n                          },\n                          \"parent_value\": {\n                            \"type\": [\n                              \"string\",\n                              \"null\"\n                            ],\n                            \"description\": \"name of the parent property type (if applicable)\"\n                          }\n                        },\n                        \"required\": [\n                          \"key\",\n                          \"value\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"success\",\n                    \"page\",\n                    \"pageSize\",\n                    \"totalRecords\",\n                    \"totalPages\",\n                    \"data\"\n                  ]\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 233,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": 136,\n                          \"value\": \"Apartment\",\n                          \"parent_key\": null,\n                          \"parent_value\": null\n                        },\n                        {\n                          \"key\": 192,\n                          \"value\": \"Duplex\",\n                          \"parent_key\": 136,\n                          \"parent_value\": \"Apartment\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"error message\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": [\n                      {\n                        \"success\": false,\n                        \"value\": \"Failed to retrieve property types\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/import/get-countries\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available countries\",\n        \"description\": \"Get list of available countries to be used in import file\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"description\": \"Page number to return (pagination is 200) - Default : 1\"\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key to be searched with\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if the request was successful\"\n                      },\n                      \"page\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Current page number\"\n                      },\n                      \"pageSize\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of records per page\"\n                      },\n                      \"totalRecords\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of records available\"\n                      },\n                      \"totalPages\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of pages available\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"key\": {\n                              \"type\": \"number\",\n                              \"description\": \"system generated key of the country\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"description\": \"name of country\"\n                            }\n                          },\n                          \"required\": [\n                            \"key\",\n                            \"value\"\n                          ]\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"success\",\n                      \"page\",\n                      \"pageSize\",\n                      \"totalRecords\",\n                      \"totalPages\",\n                      \"data\"\n                    ]\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 241,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": 1,\n                          \"value\": \"spain\"\n                        },\n                        {\n                          \"key\": 81,\n                          \"value\": \"Germany\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"error message\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": [\n                      {\n                        \"success\": false,\n                        \"value\": \"Failed to retrieve countries\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/import/get-regions\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available regions\",\n        \"description\": \"Get list of available regions to be used in import file\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"description\": \"Page number to return (pagination is 200) - Default : 1\"\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key to be searched with\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if the request was successful\"\n                    },\n                    \"page\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Current page number\"\n                    },\n                    \"pageSize\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Number of records per page\"\n                    },\n                    \"totalRecords\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of records available\"\n                    },\n                    \"totalPages\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of pages available\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the region\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of region\"\n                          },\n                          \"country_key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of region's country\"\n                          },\n                          \"country_value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of country\"\n                          }\n                        },\n                        \"required\": [\n                          \"key\",\n                          \"value\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"success\",\n                    \"page\",\n                    \"pageSize\",\n                    \"totalRecords\",\n                    \"totalPages\",\n                    \"data\"\n                  ]\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 241,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": 5,\n                          \"value\": \"Cantabria\",\n                          \"country_key\": 1,\n                          \"country_value\": \"spain\"\n                        },\n                        {\n                          \"key\": 198,\n                          \"value\": \"Black Sea\",\n                          \"country_key\": 214,\n                          \"country_value\": \"Turkey\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"error message\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": [\n                      {\n                        \"success\": false,\n                        \"value\": \"Failed to retrieve regions\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/import/get-provinces\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available provinces\",\n        \"description\": \"Get list of available provinces to be used in import file\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"description\": \"Page number to return (pagination is 200) - Default : 1\"\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key to be searched with\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if the request was successful\"\n                    },\n                    \"page\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Current page number\"\n                    },\n                    \"pageSize\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Number of records per page\"\n                    },\n                    \"totalRecords\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of records available\"\n                    },\n                    \"totalPages\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of pages available\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the province\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of province\"\n                          },\n                          \"region_key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the region\"\n                          },\n                          \"region_value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of region\"\n                          },\n                          \"country_key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the country\"\n                          },\n                          \"country_value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of country\"\n                          }\n                        },\n                        \"required\": [\n                          \"key\",\n                          \"value\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"success\",\n                    \"page\",\n                    \"pageSize\",\n                    \"totalRecords\",\n                    \"totalPages\",\n                    \"data\"\n                  ]\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 241,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": 1,\n                          \"value\": \"Albacete\",\n                          \"region_key\": 6,\n                          \"region_value\": \"Castilla-La-Mancha\",\n                          \"country_key\": 1,\n                          \"country_value\": \"spain\"\n                        },\n                        {\n                          \"key\": 2,\n                          \"value\": \"Alicante\",\n                          \"region_key\": 9,\n                          \"region_value\": \"Comunidad Valenciana\",\n                          \"country_key\": 1,\n                          \"country_value\": \"spain\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"error message\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": [\n                      {\n                        \"success\": false,\n                        \"value\": \"Failed to retrieve countries\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/import/get-cities\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available cities\",\n        \"description\": \"Get list of available cities to be used in import file\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if the request was successful\"\n                    },\n                    \"page\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Current page number\"\n                    },\n                    \"pageSize\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Number of records per page\"\n                    },\n                    \"totalRecords\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of records available\"\n                    },\n                    \"totalPages\": {\n                      \"type\": \"integer\",\n                      \"description\": \"Total number of pages available\"\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the city\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of city\"\n                          },\n                          \"province_key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the province\"\n                          },\n                          \"province_value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of province\"\n                          },\n                          \"region_key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the region\"\n                          },\n                          \"region_value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of region\"\n                          },\n                          \"country_key\": {\n                            \"type\": \"number\",\n                            \"description\": \"system generated key of the country\"\n                          },\n                          \"country_value\": {\n                            \"type\": \"string\",\n                            \"description\": \"name of country\"\n                          }\n                        },\n                        \"required\": [\n                          \"key\",\n                          \"value\"\n                        ]\n                      }\n                    }\n                  },\n                  \"required\": [\n                    \"success\",\n                    \"page\",\n                    \"pageSize\",\n                    \"totalRecords\",\n                    \"totalPages\",\n                    \"data\"\n                  ]\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 241,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": 1,\n                          \"value\": \"Amurrio\",\n                          \"province_key\": 211,\n                          \"province_value\": \"Álava\",\n                          \"region_key\": 15,\n                          \"region_value\": \"País Vasco\",\n                          \"country_key\": 1,\n                          \"country_value\": \"spain\"\n                        },\n                        {\n                          \"key\": 2,\n                          \"value\": \"Añana\",\n                          \"province_key\": 211,\n                          \"province_value\": \"Álava\",\n                          \"region_key\": 15,\n                          \"region_value\": \"País Vasco\",\n                          \"country_key\": 1,\n                          \"country_value\": \"spain\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Import log not found\"\n          }\n        }\n      }\n    },\n    \"/import/get-nationalities\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available nationalities\",\n        \"description\": \"Get list of available nationalities to be used in import file\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"description\": \"Page number to return (pagination is 200) - Default : 1\"\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key to be searched with\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if the request was successful\"\n                      },\n                      \"page\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Current page number\"\n                      },\n                      \"pageSize\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of records per page\"\n                      },\n                      \"totalRecords\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of records available\"\n                      },\n                      \"totalPages\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of pages available\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"key\": {\n                              \"type\": \"number\",\n                              \"description\": \"key of nationality\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"description\": \"name of nationality\"\n                            }\n                          },\n                          \"required\": [\n                            \"key\",\n                            \"value\"\n                          ]\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"success\",\n                      \"page\",\n                      \"pageSize\",\n                      \"totalRecords\",\n                      \"totalPages\",\n                      \"data\"\n                    ]\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 241,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": \"AD\",\n                          \"value\": \"Andorran\"\n                        },\n                        {\n                          \"key\": \"AE\",\n                          \"value\": \"Emirian\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"error message\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": [\n                      {\n                        \"success\": false,\n                        \"value\": \"Failed to retrieve nationalities\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/import/get-languages\": {\n      \"get\": {\n        \"tags\": [\n          \"Lookups\"\n        ],\n        \"summary\": \"Available languages\",\n        \"description\": \"Get list of available languages to be used in import file\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Api-Key\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The `X-Api-Key` header is used to authenticate with your API key.\"\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"description\": \"Page number to return (pagination is 200) - Default : 1\"\n          },\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key to be searched with\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates if the request was successful\"\n                      },\n                      \"page\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Current page number\"\n                      },\n                      \"pageSize\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Number of records per page\"\n                      },\n                      \"totalRecords\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of records available\"\n                      },\n                      \"totalPages\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Total number of pages available\"\n                      },\n                      \"data\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"key\": {\n                              \"type\": \"number\",\n                              \"description\": \"key of language\"\n                            },\n                            \"value\": {\n                              \"type\": \"string\",\n                              \"description\": \"name of language\"\n                            }\n                          },\n                          \"required\": [\n                            \"key\",\n                            \"value\"\n                          ]\n                        }\n                      }\n                    },\n                    \"required\": [\n                      \"success\",\n                      \"page\",\n                      \"pageSize\",\n                      \"totalRecords\",\n                      \"totalPages\",\n                      \"data\"\n                    ]\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": {\n                      \"success\": true,\n                      \"page\": 1,\n                      \"pageSize\": 200,\n                      \"totalRecords\": 241,\n                      \"totalPages\": 2,\n                      \"data\": [\n                        {\n                          \"key\": \"AL\",\n                          \"value\": \"Albanian\"\n                        },\n                        {\n                          \"key\": \"AR\",\n                          \"value\": \"Arab\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"success\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"error message\"\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"sample\": {\n                    \"value\": [\n                      {\n                        \"success\": false,\n                        \"value\": \"Failed to retrieve languages\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Property\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reference\": {\n            \"type\": \"integer\",\n            \"description\": \"Auto generated system reference\"\n          },\n          \"external_reference\": {\n            \"type\": \"string\"\n          },\n          \"other_reference\": {\n            \"type\": \"string\"\n          },\n          \"type_one\": {\n            \"type\": \"string\",\n            \"description\": \"Property type (main).\\nSee [Get property types](/api/lookups#available-property-types) for the list of available property types.\\n\"\n          },\n          \"type_two\": {\n            \"type\": \"string\",\n            \"description\": \"Property type (secondary).\\nSee [Get property types](/api/lookups#available-property-types) for the list of available property types.\\n\"\n          },\n          \"transaction_type\": {\n            \"type\": \"string\",\n            \"description\": \"Type of transaction\",\n            \"enum\": [\n              \"sale\",\n              \"rent\"\n            ]\n          },\n          \"currency\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"EUR\",\n              \"GBP\",\n              \"USD\",\n              \"AED\",\n              \"JPY\",\n              \"TRY\",\n              \"RON\",\n              \"IDR\"\n            ]\n          },\n          \"current_price\": {\n            \"type\": \"integer\"\n          },\n          \"property_state\": {\n            \"type\": \"string\",\n            \"description\": \"State of property\",\n            \"enum\": [\n              \"new\",\n              \"resale_without_renovation\",\n              \"resale_with_renovation\",\n              \"build\",\n              \"teardown_to_build\"\n            ]\n          },\n          \"year_built\": {\n            \"type\": \"integer\",\n            \"examples\": [\n              2025\n            ]\n          },\n          \"google_address\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\",\n            \"description\": \"See [Get Countries](/api/lookups#available-countries) for the list of available countries\"\n          },\n          \"region\": {\n            \"type\": \"string\",\n            \"description\": \"See [Get Regions](/api/lookups#available-regions) for the list of available regions\"\n          },\n          \"province\": {\n            \"type\": \"string\",\n            \"description\": \"See [Get Provinces](/api/lookups#available-provinces) for the list of available provinces\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"description\": \"See [Get Cities](/api/lookups#available-cities) for the list of available cities\"\n          },\n          \"postal_code\": {\n            \"type\": \"string\"\n          },\n          \"address_road_type\": {\n            \"type\": \"string\",\n            \"description\": \"Street Type\",\n            \"enum\": [\n              \"street\",\n              \"avenue\",\n              \"road\",\n              \"alley\"\n            ]\n          },\n          \"address_street\": {\n            \"type\": \"string\",\n            \"description\": \"Street name\"\n          },\n          \"address_street_nr\": {\n            \"type\": \"string\",\n            \"description\": \"Street number\"\n          },\n          \"address_portal\": {\n            \"type\": \"string\",\n            \"description\": \"Portal\"\n          },\n          \"address_floor\": {\n            \"type\": \"string\",\n            \"description\": \"Floor\"\n          },\n          \"address_door_nr\": {\n            \"type\": \"string\",\n            \"description\": \"Door number\"\n          },\n          \"po_box\": {\n            \"type\": \"string\",\n            \"description\": \"P.O. Box\"\n          },\n          \"latitude\": {\n            \"type\": \"integer\"\n          },\n          \"longitude\": {\n            \"type\": \"integer\"\n          },\n          \"property_register\": {\n            \"type\": \"string\"\n          },\n          \"occupation_license\": {\n            \"type\": \"boolean\"\n          },\n          \"idu_cru\": {\n            \"type\": \"string\",\n            \"description\": \"unique, 14-digit codes that identify a specific property within Spain's Land Registry (provide only when country is spain)\"\n          },\n          \"finca_number\": {\n            \"type\": \"string\",\n            \"description\": \"official unique registration number assigned to a property (provide only when country is spain)\"\n          }\n        }\n      },\n      \"Client\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Auto generated system reference\"\n          },\n          \"client_type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Buyer\",\n              \"Seller\",\n              \"Buyer + Seller\",\n              \"Other\",\n              \"Lessor\",\n              \"Tenant\",\n              \"Seller + Lessor\"\n            ]\n          },\n          \"client_type_other\": {\n            \"type\": \"string\",\n            \"description\": \"Other client type (if client_type is 'Other')\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Person type\",\n            \"enum\": [\n              \"legal\",\n              \"natural\"\n            ]\n          },\n          \"client_status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Active\",\n              \"Inactive\"\n            ]\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          },\n          \"gender\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Male\",\n              \"Female\"\n            ]\n          },\n          \"dob\": {\n            \"type\": \"string\",\n            \"description\": \"Date of birth. Format YYYY MM DD or YYYY/MM/DD\"\n          },\n          \"place_of_birth\": {\n            \"type\": \"string\"\n          },\n          \"primary_nationality\": {\n            \"type\": \"string\",\n            \"description\": \"Nationality (main).\\nSee [Get nationalties](/api/lookups#available-nationalities) for the list of available nationalities.\\n\"\n          },\n          \"secondary_nationality\": {\n            \"type\": \"string\",\n            \"description\": \"Nationality (additional).\\nSee [Get nationalties](/api/lookups#available-nationalities) for the list of available nationalities.\\n\"\n          },\n          \"citizenship\": {\n            \"type\": \"string\",\n            \"description\": \"See [Get Countries](/api/lookups#available-countries) for the list of available countries.\\n\"\n          },\n          \"id_type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"EU ID\",\n              \"Passport\"\n            ]\n          },\n          \"id_issuer\": {\n            \"type\": \"string\"\n          },\n          \"id_number\": {\n            \"type\": \"string\"\n          },\n          \"id_expiration_date\": {\n            \"type\": \"string\",\n            \"description\": \"ID expiration date. Format YYYY MM DD or YYYY/MM/DD\"\n          },\n          \"country_permanent_residence\": {\n            \"type\": \"string\",\n            \"description\": \"Country of permanent residence. See [Get Countries](/api/lookups#available-countries) for the list of available countries.\"\n          },\n          \"id_permanent_residence\": {\n            \"type\": \"string\",\n            \"description\": \"ID for country of permanent residence\"\n          },\n          \"permanent_residence_registration_date\": {\n            \"type\": \"string\",\n            \"description\": \"Registration date for country of permanent residence. Format YYYY MM DD or YYYY/MM/DD\"\n          },\n          \"country_temporary_residence\": {\n            \"type\": \"string\",\n            \"description\": \"Country of temporary residence. See [Get Countries](/api/lookups#available-countries) for the list of available countries\"\n          },\n          \"id_temporary_residence\": {\n            \"type\": \"string\",\n            \"description\": \"ID for country of temporary residence\"\n          },\n          \"employment\": {\n            \"type\": \"string\",\n            \"description\": \"Employment status\",\n            \"enum\": [\n              \"Employer\",\n              \"Self employed\",\n              \"Unemployed\",\n              \"Retired\"\n            ]\n          },\n          \"tax_id_natural\": {\n            \"type\": \"string\",\n            \"description\": \"Personal tax ID\"\n          },\n          \"tax_id_legal\": {\n            \"type\": \"string\",\n            \"description\": \"Business tax ID\"\n          },\n          \"pep\": {\n            \"type\": \"string\",\n            \"description\": \"Politically Exposed Person\",\n            \"enum\": [\n              \"Yes\",\n              \"No\",\n              \"Unknown\"\n            ]\n          },\n          \"political_exposure\": {\n            \"type\": \"string\",\n            \"description\": \"Description of political exposure (if pep is 'Yes')\"\n          },\n          \"ultimate_beneficial_owner\": {\n            \"type\": \"string\",\n            \"description\": \"Ultimate Beneficial Owner\",\n            \"enum\": [\n              \"Yes\",\n              \"No\",\n              \"Unknown\"\n            ]\n          },\n          \"primary_language\": {\n            \"type\": \"string\",\n            \"description\": \"AML system language key. See [Get Languages](/api/lookups#available-languages) for the list of available languages\"\n          },\n          \"secondary_language\": {\n            \"type\": \"string\",\n            \"description\": \"AML system language key. See [Get Languages](/api/lookups#available-languages) for the list of available languages\"\n          },\n          \"relationship_status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Active\",\n              \"Frozen\",\n              \"Inactive\"\n            ]\n          },\n          \"represented_by\": {\n            \"type\": \"string\",\n            \"description\": \"AML system client ID\"\n          },\n          \"assigned_to\": {\n            \"type\": \"string\",\n            \"description\": \"Responsible. AML system user's username\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"mobile_country\": {\n            \"type\": \"string\",\n            \"description\": \"Mobile country code (e.g., +34)\"\n          },\n          \"mobile_number\": {\n            \"type\": \"string\",\n            \"description\": \"Mobile number without country code\"\n          },\n          \"google_address\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\",\n            \"description\": \"Country of residence. See [Get Countries](/api/lookups#available-countries) for the list of available countries.\"\n          },\n          \"residence_region\": {\n            \"type\": \"string\",\n            \"description\": \"Region of residence. See [Get Regions](/api/lookups#available-regions) for the list of available regions.\"\n          },\n          \"residence_province\": {\n            \"type\": \"string\",\n            \"description\": \"Province of residence. See [Get Provinces](/api/lookups#available-provinces) for the list of available provinces.\"\n          },\n          \"residence_city\": {\n            \"type\": \"string\",\n            \"description\": \"City of residence. See [Get Cities](/api/lookups#available-cities) for the list of available cities.\"\n          },\n          \"residence_postal_code\": {\n            \"type\": \"string\"\n          },\n          \"address_road_type\": {\n            \"type\": \"string\",\n            \"description\": \"Street Type\",\n            \"enum\": [\n              \"street\",\n              \"avenue\",\n              \"road\",\n              \"alley\"\n            ]\n          },\n          \"address_street\": {\n            \"type\": \"string\",\n            \"description\": \"Street name\"\n          },\n          \"address_street_nr\": {\n            \"type\": \"string\",\n            \"description\": \"Street number\"\n          },\n          \"address_portal\": {\n            \"type\": \"string\",\n            \"description\": \"Portal\"\n          },\n          \"address_floor\": {\n            \"type\": \"string\",\n            \"description\": \"Floor\"\n          },\n          \"address_door_nr\": {\n            \"type\": \"string\",\n            \"description\": \"Door number\"\n          },\n          \"po_box\": {\n            \"type\": \"string\",\n            \"description\": \"P.O. Box\"\n          },\n          \"latitude\": {\n            \"type\": \"integer\"\n          },\n          \"longitude\": {\n            \"type\": \"integer\"\n          },\n          \"main_head_address_same\": {\n            \"type\": \"boolean\",\n            \"description\": \"Is address of main activity is same\"\n          },\n          \"google_address_main_activity\": {\n            \"type\": \"string\",\n            \"description\": \"Google address - Main activity\"\n          },\n          \"main_activity_country\": {\n            \"type\": \"string\",\n            \"description\": \"Country - Main activity. See [Get Countries](/api/lookups#available-countries) for the list of available countries.\"\n          },\n          \"main_activity_region\": {\n            \"type\": \"string\",\n            \"description\": \"Region - Main activity. See [Get Regions](/api/lookups#available-regions) for the list of available regions.\"\n          },\n          \"main_activity_province\": {\n            \"type\": \"string\",\n            \"description\": \"Province - Main activity. See [Get Provinces](/api/lookups#available-provinces) for the list of available provinces.\"\n          },\n          \"main_activity_city\": {\n            \"type\": \"string\",\n            \"description\": \"City - Main activity. See [Get Cities](/api/lookups#available-cities) for the list of available cities.\"\n          },\n          \"main_activity_postal_code\": {\n            \"type\": \"string\",\n            \"description\": \"Postal code - Main activity\"\n          },\n          \"main_activity_address_road_type\": {\n            \"type\": \"string\",\n            \"description\": \"Road type - Main activity\"\n          },\n          \"main_activity_address_street\": {\n            \"type\": \"string\",\n            \"description\": \"Street name - Main activity\"\n          },\n          \"main_activity_address_street_nr\": {\n            \"type\": \"string\",\n            \"description\": \"Street number - Main activity\"\n          },\n          \"main_activity_address_portal\": {\n            \"type\": \"string\",\n            \"description\": \"Portal - Main activity\"\n          },\n          \"main_activity_address_floor\": {\n            \"type\": \"string\",\n            \"description\": \"Floor - Main activity\"\n          },\n          \"main_activity_address_door_nr\": {\n            \"type\": \"string\",\n            \"description\": \"Door number - Main activity\"\n          },\n          \"main_activity_po_box\": {\n            \"type\": \"string\",\n            \"description\": \"P.O. Box - Main activity\"\n          }\n        }\n      },\n      \"Dossier\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dossier_id\": {\n            \"type\": \"integer\",\n            \"description\": \"Auto generated system reference\"\n          },\n          \"property_id\": {\n            \"type\": \"integer\",\n            \"description\": \"AML (system) property ID, External or Other reference\"\n          },\n          \"date_contract\": {\n            \"type\": \"string\",\n            \"description\": \"Format YYYY-MM-DD or YYYY/MM/DD\"\n          },\n          \"clients\": {\n            \"type\": \"string\",\n            \"description\": \"AML clients Ids, comma separated like 1,2,3\"\n          },\n          \"dossier_status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"open\",\n              \"closed\",\n              \"cancelled\"\n            ]\n          },\n          \"dossier_description\": {\n            \"type\": \"string\"\n          },\n          \"purpose\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"Primary\",\n              \"Secondary\",\n              \"Investment\",\n              \"Other\"\n            ]\n          },\n          \"other_purpose\": {\n            \"type\": \"string\",\n            \"description\": \"required if purpose is Other\"\n          },\n          \"estimated_closing_date\": {\n            \"type\": \"string\",\n            \"description\": \"Format YYYY-MM-DD or YYYY/MM/DD\"\n          },\n          \"closing_date\": {\n            \"type\": \"string\",\n            \"description\": \"Actual closing date . Format YYYY-MM-DD or YYYY/MM/DD\"\n          },\n          \"sales_price\": {\n            \"type\": \"integer\",\n            \"description\": null\n          },\n          \"closing_costs\": {\n            \"type\": \"integer\",\n            \"description\": null\n          },\n          \"own_funds\": {\n            \"type\": \"integer\",\n            \"description\": null\n          },\n          \"financed_amount\": {\n            \"type\": \"integer\",\n            \"description\": null\n          },\n          \"total_cost\": {\n            \"type\": \"integer\",\n            \"description\": null\n          },\n          \"commission_included\": {\n            \"type\": \"boolean\",\n            \"description\": null\n          },\n          \"commission_value\": {\n            \"type\": \"integer\",\n            \"description\": null\n          },\n          \"commission_payer\": {\n            \"type\": \"integer\",\n            \"description\": \"AML client ID\"\n          },\n          \"assigned_to\": {\n            \"type\": \"integer\",\n            \"description\": \"AML user ID/email\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"ApiKeyAuth\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"X-API-KEY\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"ApiKeyAuth\": []\n    }\n  ]\n};\nexport const slugs = {\n  operations: {\"/import/import-data-post-Import Data (CSV/XLS)\":\"import-data-csv-xls\",\"/import/import-status-get-Check Import Status\":\"check-import-status\",\"/import/download-import-log-get-Download Import Logs (Errors/Warnings)\":\"download-import-logs-errors-warnings\",\"/import/get-property-types-get-Available property types\":\"available-property-types\",\"/import/get-countries-get-Available countries\":\"available-countries\",\"/import/get-regions-get-Available regions\":\"available-regions\",\"/import/get-provinces-get-Available provinces\":\"available-provinces\",\"/import/get-cities-get-Available cities\":\"available-cities\",\"/import/get-nationalities-get-Available nationalities\":\"available-nationalities\",\"/import/get-languages-get-Available languages\":\"available-languages\"},\n  tags: {\"Import\":\"import\",\"Lookups\":\"lookups\"},\n};"],"names":["schema","slugs"],"mappings":"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","x_google_ignoreList":[0]}